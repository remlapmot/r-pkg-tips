{
  "hash": "ab0033638b7915bc6c9ec6f4445855ee",
  "result": {
    "markdown": "# Create a new package\n\n\n\n\n\n- Create a new package by first installing **devtools** and then running\n\n  ::: {.cell layout-align=\"center\"}\n  \n  ```{.r .cell-code}\n  install.packages(\"devtools\")\n  devtools::create(\"mynewpackage\")\n  ```\n  :::\n\n\n- This will generate\n  ```\n  ✔ Setting active project to '/Users/tom/Documents/GitHub/r-pkg-tips/mynewpackage'\n  ✔ Creating 'R/'\n  ✔ Writing 'DESCRIPTION'Package: mynewpackage\n  Title: What the Package Does (One Line, Title Case)\n  Version: 0.0.0.9000\n  Authors@R (parsed):\n      * First Last <first.last@example.com> [aut, cre] (YOUR-ORCID-ID)\n  Description: What the package does (one paragraph).\n  License: `use_mit_license()`, `use_gpl3_license()` or friends to\n      pick a license\n  Encoding: UTF-8\n  Roxygen: list(markdown = TRUE)\n  RoxygenNote: 7.2.0\n  ✔ Writing 'NAMESPACE'\n  ✔ Writing 'mynewpackage.Rproj'\n  ✔ Adding '^mynewpackage\\\\.Rproj$' to '.Rbuildignore'\n  ✔ Adding '.Rproj.user' to '.gitignore'\n  ✔ Adding '^\\\\.Rproj\\\\.user$' to '.Rbuildignore'\n  ✔ Setting active project to '<no active project>'\n  ```\n- As seen in RStudio Files pane (nb. even though there is a `.gitignore` file this folder is not initialised as a Git repo yet - look for `.git` folder)  \n\n  ::: {.cell layout-align=\"center\"}\n  ::: {.cell-output-display}\n  ![](img/devtools-create.png){fig-align='center'}\n  :::\n  :::\n\n- Double click the `.Rproj` file to open in RStudio as an RStudio project - this gives you the very helpful Build pane\n\n  ::: {.cell layout-align=\"center\"}\n  ::: {.cell-output-display}\n  ![](img/rstudio-mynewpackage.png){fig-align='center'}\n  :::\n  :::\n\n- If you are working on an existing package define folder/repo as an RStudio project (`.Rproj` file) to get the very helpful Build pane \n  - <https://support.rstudio.com/hc/en-us/articles/200526207-Using-Projects>\n  - Key line in the `.Rproj` file is: `BuildType: Package` (`None`/`Package`/`Makefile`/`Website`/`Custom`) - Build pane appears for all but `None`\n- Initialise the folder as a Git repo: `usethis::use_git()`\n- Now edit/complete the obvious fields in the `DESCRIPTION` file\n- Not all of these files will be put into our package, e.g., when we build the source package at the moment only the `DESCRIPTION` and `NAMESPACE` files are included (as our `R` and `man` directories are empty)  \n\n  ::: {.cell layout-align=\"center\"}\n  ::: {.cell-output-display}\n  ![](img/build-source-pkg-mynewpackage.png){fig-align='center'}\n  :::\n  :::\n\n- To prove the contents of the `.tar.gz` file are currently only  \n\n  ::: {.cell layout-align=\"center\"}\n  ::: {.cell-output-display}\n  ![](img/source-contents-mynewpackage.png){fig-align='center'}\n  :::\n  :::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}